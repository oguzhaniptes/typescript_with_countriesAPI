{"ast":null,"code":"var _jsxFileName = \"/home/oguz/My_Project/reactProject_with_TypeScript/countries/src/App.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const getCountries = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(\"https://restcountries.com/v3.1/all\");\n      setCountries(data);\n    } catch {\n      console.log(\"Error!\");\n    }\n  };\n  useEffect(() => {\n    getCountries();\n  }, []);\n  console.log(countries);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Countries App with TypeScript\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), countries.map(country => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: country.capital\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 28\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"u5xOCJaVOCLA9QSfvEC1BLxOVIw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","useEffect","useState","App","countries","setCountries","getCountries","data","get","console","log","map","country","capital"],"sources":["/home/oguz/My_Project/reactProject_with_TypeScript/countries/src/App.tsx"],"sourcesContent":["import axios from \"axios\"\nimport { useEffect, useState } from \"react\"\nimport { CountryType } from \"./types\"\n\nexport default function App() {\n    const [countries, setCountries] = useState<CountryType[]>([])\n\n\n\n    const getCountries = async () => {\n\n        try {\n            const { data } = await axios.get<CountryType[]>(\"https://restcountries.com/v3.1/all\")\n            setCountries(data)\n        }\n        catch {\n            console.log(\"Error!\")\n        }\n    }\n\n    useEffect(() => {\n        getCountries()\n    }, [])\n\n    console.log(countries);\n\n    return (\n        <div>\n            <h1>\n                Countries App with TypeScript\n            </h1>\n                {countries.map(country =>{\n                    return <p>\n                        \n                        {country.capital}\n                    </p>\n                })}\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAG3C,eAAe,SAASC,GAAG,GAAG;EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGH,QAAQ,CAAgB,EAAE,CAAC;EAI7D,MAAMI,YAAY,GAAG,YAAY;IAE7B,IAAI;MACA,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAgB,oCAAoC,CAAC;MACrFH,YAAY,CAACE,IAAI,CAAC;IACtB,CAAC,CACD,MAAM;MACFE,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACzB;EACJ,CAAC;EAEDT,SAAS,CAAC,MAAM;IACZK,YAAY,EAAE;EAClB,CAAC,EAAE,EAAE,CAAC;EAENG,OAAO,CAACC,GAAG,CAACN,SAAS,CAAC;EAEtB,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEK,EACAA,SAAS,CAACO,GAAG,CAACC,OAAO,IAAG;MACrB,oBAAO;QAAA,UAEFA,OAAO,CAACC;MAAO;QAAA;QAAA;QAAA;MAAA,QAChB;IACR,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GAnCuBV,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}